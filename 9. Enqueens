#include <stdio.h>
#include <stdbool.h>

#define N 4

int board[N][N];

void printBoard() {
    int i, j;
	for (i = 0; i < N; i++) {
        for (j = 0; j < N; j++) {
            if (board[i][j] == 1)
                printf("Q ");
            else
                printf(". ");
        }
        printf("\n");
    }
}

bool isSafe(int row, int col) {
    int i, j;
	for (i = 0; i < row; i++)
        if (board[i][col] == 1)
            return false;

    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j] == 1)
            return false;

    for (i = row, j = col; i >= 0 && j < N; i--, j++)
        if (board[i][j] == 1)
            return false;

    return true;
}

bool solveNQueen(int row) {
    int col;
	if (row == N)
        return true;

    for (col = 0; col < N; col++) {
        if (isSafe(row, col)) {
            board[row][col] = 1;

            if (solveNQueen(row + 1))
                return true;

            board[row][col] = 0;
        }
    }

    return false;
}

int main() {
    int i, j;
	for (i = 0; i < N; i++) {
        for (j = 0; j < N; j++) {
            board[i][j] = 0;
        }
    }

    if (solveNQueen(0)) {
        printf("Solution to the N-Queen problem:\n");
        printBoard();
    } else {
        printf("Solution does not exist.\n");
    }

    return 0;
}

output :

Solution to the N-Queen problem:
Q . . .
. . Q .
. Q . .
. . . Q
