#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main() {
    int length, i, j, temp, count = 0;
    clock_t start, end;
    double cpu_time_used;

    // Taking the number of elements as input
    printf("Enter the number of elements in the array: ");
    scanf("%d", &length);
    
    int a[length];  // Declaring array of user-defined length
    
    srand(time(0));  // Seed for random number generator

    // Filling the array with random numbers between 0 and 99
    for (i = 0; i < length; i++) {
        a[i] = rand() % 100;
    }

    // Printing the array before sorting
    printf("Array before bubble sort:\n");
    for (i = 0; i < length; i++) {
        printf("%d ", a[i]);
    }
    printf("\n");

    // Start clock to measure time taken by bubble sort
    start = clock();

    // Bubble sort implementation
    for (i = 0; i < length - 1; i++) {
        // Optimization: If no elements were swapped, the array is already sorted
        int swapped = 0;
        for (j = 0; j < length - 1 - i; j++) {
            if (a[j] > a[j + 1]) {
                // Swap the elements
                temp = a[j];
                a[j] = a[j + 1];
                a[j + 1] = temp;
                count++;  // Increment count of swaps
                swapped = 1;
            }
        }
        // If no elements were swapped, the array is already sorted
        if (!swapped) {
            break;
        }
    }

    // End clock after sorting is complete
    end = clock();

    // Calculate the time taken for sorting
    cpu_time_used = ((double)(end - start)) / CLOCKS_PER_SEC;

    // Printing the array after sorting
    printf("\nArray after bubble sort:\n");
    for (i = 0; i < length; i++) {
        printf("%d ", a[i]);
    }
    printf("\n");

    // Output the number of swaps and the time taken
    printf("Count of swaps: %d\n", count);
    printf("Time taken for bubble sort: %f seconds\n", cpu_time_used);

    return 0;  // Missing semicolon was added here
}



out put : 

 Enter the number of elements in the array: 5
Array before bubble sort:
83 1 84 66 65 

Array after bubble sort:
1 65 66 83 84 
Count of swaps: 6
Time taken for bubble sort: 0.000001 seconds
